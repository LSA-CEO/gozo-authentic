import { getTranslations } from 'next-intl/server';
import { CategoryCard } from '../../components/CategoryCard';
import { OurStory } from '../../components/OurStory';
import { WhatsAppButton } from '../../components/WhatsAppButton';
import { supabase } from '../../lib/supabase';
import Image from 'next/image';
import { Category, ExperienceWithDetails } from '../../types';

async function getCategories(): Promise<Category[]> {
  const { data, error } = await supabase
    .from('categories')
    .select('*')
    .order('display_order', { ascending: true });
  
  if (error) {
    console.error('Error fetching categories:', error);
    return [];
  }
  
  return data || [];
}

async function getExperienceCountByCategory(): Promise<Record<string, number>> {
  const { data, error } = await supabase
    .from('experiences')
    .select('category_id')
    .eq('is_active', true);
  
  if (error) {
    console.error('Error fetching experience counts:', error);
    return {};
  }
  
  const counts: Record<string, number> = {};
  data?.forEach(exp => {
    if (exp.category_id) {
      counts[exp.category_id] = (counts[exp.category_id] || 0) + 1;
    }
  });
  
  return counts;
}

export default async function HomePage({ params }: { params: Promise<{ locale: string }> }) {
  const [categories, experienceCounts] = await Promise.all([
    getCategories(),
    getExperienceCountByCategory()
  ]);
  
  const { locale } = await params;
  const t = await getTranslations('HomePage');
  
  return (
    <main className="min-h-screen">
      {/* Hero Section - Plein √©cran avec image de Gozo */}
      <section className="relative h-screen flex items-center justify-center overflow-hidden">
        {/* Background image */}
        <div className="absolute inset-0">
          <Image
            src="/images/experiences/istockphoto-1132790119-1024x1024.jpg"
            alt="Gozo coastline"
            fill
            className="object-cover"
            priority
          />
          {/* Overlay gradient */}
          <div className="absolute inset-0 bg-gradient-to-b from-black/30 via-black/20 to-black/40" />
        </div>
        
        {/* Content */}
        <div className="relative z-20 text-center px-4 max-w-5xl mx-auto">
          <h1 className="mb-6">
            <span className="block text-white text-2xl md:text-3xl font-light tracking-[0.3em] mb-2 drop-shadow-sm">
              DISCOVER
            </span>
            <span className="block text-white text-7xl md:text-8xl lg:text-9xl font-serif italic drop-shadow-lg">
              Gozo
            </span>
            <span className="block text-white text-xl md:text-2xl font-light tracking-[0.2em] mt-2 drop-shadow-sm">
              WITH FLAV & JADE
            </span>
          </h1>
          
          <p className="text-white/90 text-lg md:text-xl max-w-2xl mx-auto mb-10 font-light leading-relaxed drop-shadow">
            {t('hero.subtitle')}
          </p>
          
          <div className="space-y-4">
            <a href="#categories" className="inline-flex items-center gap-3 bg-white/95 backdrop-blur-sm text-gray-900 hover:bg-white font-medium py-4 px-8 rounded-full text-lg transform hover:scale-105 transition-all duration-300 shadow-xl">
              {t('hero.cta')}
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
              </svg>
            </a>
            
            <div className="block">
              <span className="text-white/80 text-sm">
                {t('hero.scrollText')}
              </span>
            </div>
          </div>
        </div>
        
        {/* Wave separator */}
        <div className="absolute bottom-0 left-0 right-0">
          <svg viewBox="0 0 1440 120" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 120L60 105C120 90 240 60 360 45C480 30 600 30 720 37.5C840 45 960 60 1080 67.5C1200 75 1320 75 1380 75L1440 75V120H1380C1320 120 1200 120 1080 120C960 120 840 120 720 120C600 120 480 120 360 120C240 120 120 120 60 120H0Z" fill="white"/>
          </svg>
        </div>
      </section>

      {/* Notre Histoire Section */}
      <OurStory />

      {/* Categories Section */}
      <section id="categories" className="py-20 px-4 md:px-8 bg-gradient-to-b from-amber-50/30 to-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-5xl md:text-6xl font-serif text-gray-900 mb-4">
              {t('categories.title')}
            </h2>
            <div className="w-24 h-1 bg-amber-500 mx-auto mb-6"></div>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto font-light">
              {t('categories.subtitle')}
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {categories.map((category, index) => (
              <div key={category.id} 
                   className="opacity-0 animate-fade-in-up"
                   style={{ animationDelay: `${index * 100}ms`, animationFillMode: 'forwards' }}>
                <CategoryCard 
                  category={category} 
                  experienceCount={experienceCounts[category.id] || 0}
                />
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Why Choose Us - Style Magazine */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4">
          <div className="grid lg:grid-cols-2 gap-16 items-center">
            <div className="order-2 lg:order-1">
              <h2 className="text-4xl md:text-5xl font-serif text-gray-900 mb-8">
                {t('why.title')}
              </h2>
              
              <div className="space-y-8">
                <div className="flex gap-6">
                  <div className="flex-shrink-0 w-16 h-16 bg-amber-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl">ü§ù</span>
                  </div>
                  <div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">{t('why.trusted.title')}</h3>
                    <p className="text-gray-600 leading-relaxed">{t('why.trusted.description')}</p>
                  </div>
                </div>
                
                <div className="flex gap-6">
                  <div className="flex-shrink-0 w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl">üí¨</span>
                  </div>
                  <div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">{t('why.direct.title')}</h3>
                    <p className="text-gray-600 leading-relaxed">{t('why.direct.description')}</p>
                  </div>
                </div>
                
                <div className="flex gap-6">
                  <div className="flex-shrink-0 w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center">
                    <span className="text-2xl">‚ú®</span>
                  </div>
                  <div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">{t('why.unique.title')}</h3>
                    <p className="text-gray-600 leading-relaxed">{t('why.unique.description')}</p>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="relative order-1 lg:order-2">
              <div className="aspect-[4/5] relative rounded-2xl overflow-hidden shadow-2xl">
                <img 
                  src="https://images.unsplash.com/photo-1563911892437-1feda0179e1b?q=80&w=2787"
                  alt="Azure Window Gozo"
                  className="w-full h-full object-cover"
                />
              </div>
              {/* Decorative element */}
              <div className="absolute -bottom-6 -right-6 w-48 h-48 bg-amber-500/20 rounded-2xl -z-10"></div>
            </div>
          </div>
        </div>
      </section>

      {/* Instagram-style Gallery */}
      <section className="py-20 bg-gradient-to-b from-white to-amber-50/30">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-serif text-gray-900 mb-4">{t('gallery.title')}</h2>
            <p className="text-gray-600">{t('gallery.subtitle')}</p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            {[
              "/images/gallery/gozo-1.jpg",
              "/images/gallery/gozo-2.jpg",
              "/images/gallery/gozo-3.jpg",
              "/images/gallery/gozo-4.jpg",
              "/images/gallery/gozo-5.jpg",
              "/images/gallery/gozo-6.jpg",
              "/images/gallery/gozo-7.jpg",
              "/images/gallery/gozo-8.jpg"
            ].map((src, i) => (
              <div key={i} className="aspect-square relative overflow-hidden group cursor-pointer">
                <Image
                  src={src}
                  alt={`Gozo moment ${i + 1}`}
                  fill
                  className="object-cover group-hover:scale-110 transition-transform duration-500"
                  sizes="(max-width: 768px) 50vw, 25vw"
                />
                <div className="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-300" />
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="relative py-24 overflow-hidden">
        <div className="absolute inset-0">
          <img 
            src="https://images.unsplash.com/photo-1571406252241-db0280bd36cd?q=80&w=2834"
            alt="Gozo sunset"
            className="w-full h-full object-cover"
          />
          <div className="absolute inset-0 bg-gradient-to-r from-amber-600/90 to-orange-600/90"></div>
        </div>
        
        <div className="relative z-10 max-w-4xl mx-auto text-center px-4">
          <h2 className="text-5xl md:text-6xl font-serif text-white mb-6">
            {t('cta.title')}
          </h2>
          <p className="text-xl md:text-2xl text-white/90 mb-10 font-light">
            {t('cta.subtitle')}
          </p>
          
          <WhatsAppButton 
            message={t('cta.subtitle')}
            className="inline-flex items-center gap-3 bg-white text-gray-900 hover:bg-gray-100 font-medium py-5 px-10 rounded-full text-xl transform hover:scale-105 transition-all duration-300 shadow-2xl"
          >
            {t('cta.button')}
            <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
            </svg>
          </WhatsAppButton>
        </div>
      </section>
    </main>
  );
}
